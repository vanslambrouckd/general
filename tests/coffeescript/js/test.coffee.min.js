(function() {
  var Camera, Gallery, Human, Product, Shop, Skateboard, data, elem, find, info, naam, name, pixelmatic, products, purchase, shop, skateOMatic, x11, x12,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  naam = "davied";

  data = {
    X100: {
      description: " Arealy cool camera",
      stock: 5
    },
    X1: {
      description: "an awesome camera",
      stock: 6
    }
  };

  purchase = function(product) {
    return console.log(product);
  };

  for (name in data) {
    if (!__hasProp.call(data, name)) continue;
    info = data[name];
    elem = document.createElement("li");
    elem.innerHTML = "" + name + ": " + info.description + " (" + info.stock + " in stock)";
    elem.onclick = purchase(name);
    document.getElementById('products').appendChild(elem);
  }

  Product = (function() {
    var products;

    products = [];

    Product.find = function(query) {
      var product, _i, _len, _results;
      _results = [];
      for (_i = 0, _len = products.length; _i < _len; _i++) {
        product = products[_i];
        if (product.name === query) {
          _results.push(product);
        }
      }
      return _results;
    };

    function Product(name, info) {
      products.push(this);
      this.name = name;
      this.info = info;
      this.view = document.createElement('div');
      this.view.className = 'product';
      document.querySelector('.page').appendChild(this.view);
      this.render();
    }

    Product.prototype.render = function() {
      console.log('product render');
      return this.view.innerHTML = "" + this.name + ": " + this.info.stock;
    };

    Product.prototype.purchase = function(product) {
      return this.render;
    };

    return Product;

  })();

  Gallery = (function() {
    function Gallery(photos) {
      this.photos = photos;
    }

    Gallery.prototype.render = function() {
      var images, photo;
      images = (function() {
        var _i, _len, _ref, _results;
        _ref = this.photos != null;
        _results = [];
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          photo = _ref[_i];
          _results.push('<li><img src="#{photo}" alt="sample photo" /></li>');
        }
        return _results;
      }).call(this);
      return "<ul class='gallery'>" + (images.join('')) + "</ul>";
    };

    return Gallery;

  })();

  Camera = (function(_super) {
    __extends(Camera, _super);

    function Camera(name, info) {
      this.gallery = new Gallery(info.gallery);
      Camera.__super__.constructor.apply(this, arguments);
    }

    Camera.prototype.purchaseCategory = 'camera';

    Camera.prototype.megapixels = function() {
      return this.info.megapixels || 'Unknown';
    };

    Camera.prototype.render = function() {
      return "" + this.name + " (#@info.stock}) " + (this.gallery.render());
    };

    return Camera;

  })(Product);

  pixelmatic = new Camera('The pixelmatic 5000', {});

  Skateboard = (function(_super) {
    __extends(Skateboard, _super);

    function Skateboard() {
      return Skateboard.__super__.constructor.apply(this, arguments);
    }

    Skateboard.prototype.purchaseCategory = 'skateboard';

    Skateboard.prototype.length = function() {
      return this.info.length || 'Unknown';
    };

    return Skateboard;

  })(Product);

  Shop = (function() {
    var find, products;

    function Shop(data) {
      this.view = document.createElement('input');
      this.view.oninput = function() {
        var prod;
        prod = Product.find(this.value);
        console.log(prod);
        return Product.find(this.value);
      };
      document.body.appendChild(this.view);
    }

    products = [];

    for (name in data) {
      if (!__hasProp.call(data, name)) continue;
      info = data[name];
      products.push(new Product(name, info));
    }

    console.log(products);

    find = function(query) {
      var product, _i, _len, _results;
      _results = [];
      for (_i = 0, _len = products.length; _i < _len; _i++) {
        product = products[_i];
        if (product.name === query) {
          _results.push(product);
        }
      }
      return _results;
    };

    return Shop;

  })();

  shop = new Shop(data);

  x12 = new Camera('X12', {
    description: 'An awesome camera',
    stock: 5
  });

  products = [
    {
      name: "Shark repellant",
      name: "Duct tape"
    }
  ];

  find = function(query) {
    var product, _i, _len, _results;
    _results = [];
    for (_i = 0, _len = products.length; _i < _len; _i++) {
      product = products[_i];
      if (product.name === query) {
        _results.push(product);
      }
    }
    return _results;
  };

  console.log(find("Duct Tape"));

  skateOMatic = new Skateboard("Skate-o-matic", {
    description: "it's a skateboard",
    stock: 1
  });

  skateOMatic.render();

  x11 = new Camera('x11', {
    description: "the futur of photography",
    stock: 4,
    megapixels: 20
  });

  Human = (function() {
    function Human() {}

    return Human;

  })();

  Human.rights = ['Life', 'Liberty', 'The pursuit of happiness'];

  Human.rights = Human.rights.concat(['To party']);

}).call(this);
